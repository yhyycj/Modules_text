# coding: utf-8

def fastaParser(infile):
    '''
    parse the input fasta file, return a dict containing all sections and the contents
    '''
    cur_section = None
    cur_content = ''
    rlts = {}
    for line in open(infile, 'r'):
        line = line.lstrip().decode('utf8')
        if line.startswith('>'):
            if cur_section is not None:
                rlts[cur_section] = cur_content
            cur_section = line.strip().lstrip('>')
            cur_content = ''
        else:
            if len(line.strip()):
                cur_content += line
        rlts[cur_section] = cur_content
    return rlts
